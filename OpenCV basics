#IMAGE RESIZING

import cv2
import imutils
img = cv2.imread(‘sample2.jpg')
resizedImg = imutils.resize(img, width=500)
cv2.imwrite(‘resizedImage.jpg', resizedImg)
	
#GAUSSIAN BLUR - SMOOTHENING IMAGE

import cv2
img = cv2.imread(‘sample2.jpg')
grayImg = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
#dst = cv2.GaussianBlur(src, (kernel),borderType)
gaussianImg = cv2.GaussianBlur(grayImg, (21, 21), 0)
cv2.imwrite(“GaussianBlur.jpg”, gaussianImg)
	
#TRESHOLDING (PURE BLACK AND WHITE)

#dst = cv2.threshold(src, threshold, maxValueForThreshold,binary,type)[1] 
import cv2
img=cv2.imread("sample.jpg")
grayImg = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
gaussBlur = cv2.GaussianBlur(grayImg,(21,21),0)
thresholdImg = cv2.threshold(grayImg,150,255,cv2.THRESH_BINARY)[1]
cv2.imwrite("threshold.jpg",thresholdImg)
	
#DRAWING RECTANGLE

#cv2.rectangle(src,startpoint,endpoint,color,thickness)
cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)

#PUTTING TEXT IN IMAGE

#cv2.putText(src, text, position,font,fontSize,color,thickness)
cv2.putText(img, text, (10, 20), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)

#FIND CONTURS

#dst =cv2.findContours(srcImageCopy, contourRetrievalMode,contourApproximationMethod)
cnts = cv2.findContours(threshImg.copy(), cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)

#READING FRAME FROM CAMERA

import cv2
vs = cv2.VideoCapture(0)
while True:
	_,img = vs.read()
	cv2.imshow("VideoStream", img)
	key = cv2.waitKey(1) & 0xFF
	if key == ord("q"):
		break
vs.release()
cv2.destroyAllWindows()


#MOVING OBJECT DETECTION

import imutils
import time
import cv2

vs = cv2.VideoCapture(0)
firstFrame = None
area=500

